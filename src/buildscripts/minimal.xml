<project name="bmminimal" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:c="antlib:net.sf.antcontrib">
    <target name="clean-build" extensionOf="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="clean-deps">
        <delete dir="${deps.dir}"/>
    </target>

    <target name="defaultproperties" extensionOf="init">
        <property file="${basedir}/build.properties"/>
        <property file="${basedir}/build-${user.name}.properties"/>
        <property file="${user.home}/.buildmagic.properties"/>
        <property name="build.dir" value="${basedir}/_build"/>
        <property name="deps.dir" value="${basedir}/_deps"/>
        <property name="artifacts.dir" value="${build.dir}/artifacts"/>
        <property name="projectname" value="myproject"/>
        <property name="jarname" value="${projectname}"/>
        <path id="cp.build">
            <fileset dir="${deps.dir}" includes="**/*.jar"/>
        </path>
    </target>

    <target name="deflibspath">
        <path id="cp.ivy" location="/usr/share/java/ivy.jar"/>
        <path id="cp.httpclient" location="/usr/share/java/commons-httpclient.jar"/>
        <path id="cp.clogging" location="/usr/share/java/commons-logging.jar"/>
        <path id="cp.ccodec" location="/usr/share/java/commons-codec.jar"/>
        <path id="cp.cio" location="/usr/share/java/commons-io.jar"/>
        <path id="cp.ccompress" location="/usr/share/java/commons-compress.jar"/>
        <path id="cp.antcontrib" location="/usr/share/java/ant-contrib.jar"/>
        <path id="cp.jsch" location="/usr/share/java/jsch.jar"/>
        <dirname property="bmminimal.basedir" file="${ant.file.bmminimal}"/>
        <path id="cp.buildmagic" location="${bmminimal.basedir}/buildmagic.jar"/>
    </target>

    <target name="load-baseantlibs" depends="deflibspath" extensionOf="init">
        <taskdef resource="net/sf/antcontrib/antlib.xml" uri="antlib:net.sf.antcontrib" classpathref="cp.antcontrib"
                loaderref="antcloader"/>
        <taskdef resource="com/kloudtek/buildmagic/antlib.xml" uri="antlib:com.kloudtek.buildmagic"
                loaderref="bmloader">
            <classpath>
                <path refid="cp.buildmagic"/>
                <path refid="cp.cio"/>
                <path refid="cp.ccompress"/>
            </classpath>
        </taskdef>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant"
                loaderref="ivyloader">
            <classpath>
                <path refid="cp.ivy"/>
                <path refid="cp.httpclient"/>
                <path refid="cp.clogging"/>
                <path refid="cp.ccodec"/>
                <path refid="cp.jsch"/>
            </classpath>
        </taskdef>
    </target>

    <target name="init-ivy">
        <c:if>
            <available file="${user.home}/.bm.ivysettings.xml"/>
            <then>
                <echo>Loading Ivy Settings file: ${user.home}/.bm.ivysettings.xml</echo>
                <ivy:settings file="${user.home}/.bm.ivysettings.xml"/>
            </then>
            <else>
                <ivy:settings/>
            </else>
        </c:if>
    </target>

    <target name="deps" depends="init,init-ivy">
        <ivy:resolve/>
        <ivy:retrieve pattern="${deps.dir}/[conf]-[type]/[artifact].[ext]"/>
        <ivy:report graph="false" todir="${deps.dir}"/>
    </target>

    <target name="resolve-ivy-version" depends="init-ivy" unless="version" extensionOf="init">
        <ivy:info/>
        <c:if>
            <not>
                <isset property="version"/>
            </not>
            <then>
                <ivy:buildnumber organisation="${ivy.organisation}" module="${ivy.module}" default="${ivy.revision}"/>
                <property name="version" value="${ivy.new.revision}"/>
            </then>
        </c:if>
        <property name="reltype" value="${ivy.status}"/>
    </target>

    <target name="publish-ivy" depends="init-ivy,resolve-ivy-version" extensionOf="publish">
        <property name="publishresolver" value="default"/>
        <ivy:publish resolver="${publishresolver}" pubrevision="${version}" status="${reltype}"
                     artifactspattern="${build.dir}/artifacts/[artifact].[ext]" update="true"
                     forcedeliver="true"/>
    </target>

    <extension-point name="init"/>

    <extension-point name="clean" depends="init"/>

    <extension-point name="pre-compile" depends="init"/>

    <extension-point name="compile" depends="pre-compile"/>

    <extension-point name="post-compile" depends="compile"/>

    <extension-point name="pre-artifacts" depends="post-compile"/>

    <extension-point name="artifacts" depends="pre-artifacts"/>

    <extension-point name="post-artifacts" depends="artifacts"/>

    <extension-point name="pre-publish" depends="post-artifacts"/>

    <extension-point name="publish" depends="pre-publish"/>
</project>